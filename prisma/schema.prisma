generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id String @id @default(cuid())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                  String                @id @default(cuid())
  name                String?
  email               String?               @unique
  emailVerified       DateTime?
  image               String?
  balance             BigInt                @default(100)
  accounts            Account[]
  sessions            Session[]
  UserMatchPrediction UserMatchPrediction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Match {
  id                  String                @id @default(cuid())
  teamA_name          String
  teamB_name          String
  teamA_odds          Decimal
  teamB_odds          Decimal
  teamA_logoUrl       String?
  teamB_logoUrl       String?
  bestOf              Int
  dateAndTime         DateTime
  hltvUrl             String
  winner              Int                   @default(0)
  UserMatchPrediction UserMatchPrediction[]
}

model UserMatchPrediction {
  userId         String
  matchId        String
  user           User     @relation(fields: [userId], references: [id])
  match          Match    @relation(fields: [matchId], references: [id])
  pickedTeam     Int
  predictionOdds Decimal
  balanceResult  Decimal?

  @@id([userId, matchId])
  @@index([matchId])
  @@index([userId])
}
